{"version":3,"sources":["index.js"],"names":["operations","Calculator","props","_this","Object","_home_mbd_Projects_reactjs_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_mbd_Projects_reactjs_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_mbd_Projects_reactjs_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","expression","handleButtonClick","bind","_home_mbd_Projects_reactjs_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","exp","isOperation","slice","digit","indexOf","event","newExpression","input","target","value","isComplete","math","toString","setState","buttons","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","Screen","Keyboard","React","Component","_this2","map","button","onClick","key","text","ReactDOM","render","document","getElementById"],"mappings":"gPAKMA,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,KAElCC,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,WAAY,KAGhBR,EAAKS,kBAAoBT,EAAKS,kBAAkBC,KAAvBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAPVA,0EAWRY,GACP,OAAIT,KAAKU,YAAYD,EAAIE,OAAO,wCAMxBC,GACR,OAAmC,IAA/BlB,EAAWmB,QAAQD,6CAMTE,GACd,IAAIC,EAAgB,GACdV,EAAaL,KAAKI,MAAMC,WACxBW,EAAQF,EAAMG,OAAOC,MAGvBH,EADU,UAAVC,EACgB,IACM,MAAfX,GAAuBL,KAAKU,YAAYM,GAExChB,KAAKmB,WAAWd,IAAyB,MAAVW,EACtBI,OAAUf,GAAYgB,YAC9BrB,KAAKmB,WAAWd,IAAeL,KAAKU,YAAYM,GACxCX,EACM,aAAfA,EACS,IAEAA,EAAaW,EARbA,EAWpBhB,KAAKsB,SAAS,CACVjB,WAAYU,qCAKhB,IAAMQ,EAAUvB,KAAKJ,MAAM2B,QAE3B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACE,EAAD,CAAQvB,WAAYL,KAAKI,MAAMC,aAC/BmB,EAAAC,EAAAC,cAACG,EAAD,CAAUvB,kBAAmBN,KAAKM,kBAC9BiB,QAASA,YAzDJO,IAAMC,WA+DzBH,mLAEE,IAAMvB,EAAaL,KAAKJ,MAAMS,WAE9B,OACImB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACRtB,WAPAyB,IAAMC,WAcrBF,mLACO,IAAAG,EAAAhC,KACCuB,EAAUvB,KAAKJ,MAAM2B,QAE3B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVJ,EAAQU,IAAI,SAACC,GACV,OACQV,EAAAC,EAAAC,cAAA,UAAQC,UAAW,UAAYO,EAAOP,UAClCT,MAAOgB,EAAOhB,MACdiB,QAASH,EAAKpC,MAAMU,kBACpB8B,IAAKF,EAAOhB,OAEXgB,EAAOG,gBAbjBP,IAAMC,WAyC7BO,IAASC,OACLf,EAAAC,EAAAC,cAAC/B,EAAD,CAAY4B,QAnBA,CACZ,CAACc,KAAM,QAASnB,MAAO,QAASS,UAAW,gBAC3C,CAACU,KAAM,OAAUnB,MAAO,IAAKS,UAAW,oBACxC,CAACU,KAAM,OAAUnB,MAAO,IAAKS,UAAW,oBACxC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,SAAUnB,MAAO,IAAKS,UAAW,oBACxC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,IAAUnB,MAAO,IAAKS,UAAW,oBACxC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,IAAKnB,MAAO,IAAKS,UAAW,IACnC,CAACU,KAAM,IAAUnB,MAAO,IAAKS,UAAW,uBAKxCa,SAASC,eAAe","file":"static/js/main.c1c43269.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as math from 'mathjs';\n\nconst operations = ['*', '/', '+', '-', '='];\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expression: '0',\n        }\n\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n\n    }\n\n    isComplete(exp) {\n        if (this.isOperation(exp.slice(-1))) {\n            return false;\n        }\n        return true;\n    }\n\n    isOperation(digit) {\n        if (operations.indexOf(digit) === -1) {\n            return false;\n        }\n        return true;\n    }\n\n    handleButtonClick(event) {\n        let newExpression = \"\";\n        const expression = this.state.expression;\n        const input = event.target.value;\n\n        if (input === 'clear') {\n            newExpression = '0';\n        } else if (expression === '0' && !this.isOperation(input)) {\n            newExpression = input;\n        } else if (this.isComplete(expression) && input === '=') {\n            newExpression = math.eval(expression).toString();\n        } else if (!this.isComplete(expression) && this.isOperation(input)){\n            newExpression = expression;\n        } else if (expression === 'Infinity') {\n            newExpression = '0';\n        } else {\n            newExpression = expression + input;\n        }\n\n        this.setState({\n            expression: newExpression,\n        })\n    }\n\n    render() {\n        const buttons = this.props.buttons;\n\n        return (\n            <div className=\"calculator\">\n                <Screen expression={this.state.expression}/>\n                <Keyboard handleButtonClick={this.handleButtonClick}\n                    buttons={buttons}/>\n            </div>\n        );\n    }\n}\n\nclass Screen extends React.Component {\n    render() {\n        const expression = this.props.expression;\n\n        return (\n            <div className=\"screen\">\n                <p className=\"expression\">\n                    {expression}\n                </p>\n            </div>\n        );\n    }\n}\n\nclass Keyboard extends React.Component {\n    render() {\n        const buttons = this.props.buttons;\n\n        return (\n            <div className=\"keyboard\">\n                {buttons.map((button) => {\n                    return (\n                            <button className={\"button \" + button.className}\n                                value={button.value}\n                                onClick={this.props.handleButtonClick}\n                                key={button.value}\n                            >\n                                {button.text}\n                            </button>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nconst BUTTONS = [\n    {text: \"Clear\", value: \"clear\", className: \"clear-button\"},\n    {text: \"\\u00d7\", value: \"*\", className: \"operation-button\"},\n    {text: \"\\u00f7\", value: \"/\", className: \"operation-button\"},\n    {text: \"7\", value: \"7\", className: \"\"},\n    {text: \"8\", value: \"8\", className: \"\"},\n    {text: \"9\", value: \"9\", className: \"\"},\n    {text: \"\\u2212\", value: \"-\", className: \"operation-button\"},\n    {text: \"4\", value: \"4\", className: \"\"},\n    {text: \"5\", value: \"5\", className: \"\"},\n    {text: \"6\", value: \"6\", className: \"\"},\n    {text: \"\\u002b\", value: \"+\", className: \"operation-button\"},\n    {text: \"1\", value: \"1\", className: \"\"},\n    {text: \"2\", value: \"2\", className: \"\"},\n    {text: \"3\", value: \"3\", className: \"\"},\n    {text: \"\\u003d\", value: \"=\", className: \"operation-button\"},\n]\n\nReactDOM.render(\n    <Calculator buttons={BUTTONS}/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}